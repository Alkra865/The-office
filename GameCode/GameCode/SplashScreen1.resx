<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MainLayoutPanel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>